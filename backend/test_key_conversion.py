#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ VAPID –∫–ª—é—á–µ–π
"""

import base64
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.backends import default_backend

def test_key_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é PEM –∫–ª—é—á–∞ –≤ —Ñ–æ—Ä–º–∞—Ç pywebpush"""
    
    # –í–∞—à —Ç–µ–∫—É—â–∏–π PEM –∫–ª—é—á
    pem_key = """-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguTZYw06dfc8DKWas
6SGffWI4cZINgWiz3CL/5o4jmG6hRANCAAS/2PxOpMGZC6iRs3S6RtchF+hb2ygQ
ibLtClEuhkp1fsAgm6SJBj3MY8cLErNxWDK6jDYb0KbmlwQ+BV3pQcL3
-----END PRIVATE KEY-----"""
    
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ VAPID –∫–ª—é—á–∞...")
    
    try:
        # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º PEM –∫–ª—é—á
        print("\n1. –ó–∞–≥—Ä—É–∂–∞–µ–º PEM –∫–ª—é—á...")
        private_key = serialization.load_pem_private_key(
            pem_key.encode(),
            password=None,
            backend=default_backend()
        )
        print("‚úÖ PEM –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # 2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ DER
        print("\n2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ DER —Ñ–æ—Ä–º–∞—Ç...")
        der_key = private_key.private_bytes(
            encoding=serialization.Encoding.DER,
            format=serialization.PrivateFormat.PKCS8,
            encryption_algorithm=serialization.NoEncryption()
        )
        print(f"‚úÖ DER –∫–ª—é—á —Å–æ–∑–¥–∞–Ω, —Ä–∞–∑–º–µ—Ä: {len(der_key)} –±–∞–π—Ç")
        
        # 3. –ö–æ–¥–∏—Ä—É–µ–º –≤ base64url
        print("\n3. –ö–æ–¥–∏—Ä—É–µ–º –≤ base64url...")
        base64url_key = base64.urlsafe_b64encode(der_key).decode('utf-8').rstrip('=')
        print(f"‚úÖ Base64url –∫–ª—é—á —Å–æ–∑–¥–∞–Ω, –¥–ª–∏–Ω–∞: {len(base64url_key)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å pywebpush
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å pywebpush...")
        try:
            from pywebpush import webpush
            from py_vapid import Vapid
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ py_vapid
            vapid = Vapid.from_string(private_key=base64url_key)
            print("‚úÖ –ö–ª—é—á —Å–æ–≤–º–µ—Å—Ç–∏–º —Å pywebpush")
            
            print(f"\nüìã –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è pywebpush:")
            print(f"{base64url_key}")
            
        except ImportError:
            print("‚ö†Ô∏è  pywebpush –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ pywebpush: {e}")
            
        print("\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        return base64url_key
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return None

if __name__ == "__main__":
    test_key_conversion() 
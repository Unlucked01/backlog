#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ VAPID –∫–ª—é—á–µ–π
"""

import os
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.backends import default_backend

def test_vapid_key():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É VAPID –∫–ª—é—á–∞"""
    
    # –í–∞—à —Ç–µ–∫—É—â–∏–π –∫–ª—é—á –∏–∑ docker-compose.yml
    vapid_private_key = """-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguTZYw06dfc8DKWas
6SGffWI4cZINgWiz3CL/5o4jmG6hRANCAAS/2PxOpMGZC6iRs3S6RtchF+hb2ygQ
ibLtClEuhkp1fsAgm6SJBj3MY8cLErNxWDK6jDYb0KbmlwQ+BV3pQcL3
-----END PRIVATE KEY-----"""
    
    vapid_public_key = "BL_Y_E6kwZkLqJGzdLpG1yEX6FvbKBCJsu0KUS6GSnV-wCCbpIkGPcxjxwsSs3FYMrqMNhvQpuaXBD4FXelBwvc"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VAPID –∫–ª—é—á–µ–π...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
        print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á...")
        private_key = serialization.load_pem_private_key(
            vapid_private_key.encode(),
            password=None,
            backend=default_backend()
        )
        print("‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å pywebpush
        print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å pywebpush...")
        try:
            from pywebpush import webpush
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
            test_subscription = {
                'endpoint': 'https://example.com/test',
                'keys': {
                    'p256dh': 'test_p256dh_key',
                    'auth': 'test_auth_key'
                }
            }
            
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å VAPID claims (–±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏)
            vapid_claims = {"sub": "mailto:test@example.com"}
            
            print("‚úÖ pywebpush —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å OK")
            
        except ImportError:
            print("‚ö†Ô∏è  pywebpush –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ pywebpush: {e}")
        
        print("\n3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–µ:")
        print(f"   –¢–∏–ø: {type(private_key).__name__}")
        print(f"   –†–∞–∑–º–µ—Ä: {private_key.key_size} –±–∏—Ç")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ö–ª—é—á–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–π: {e}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–µ –∫–ª—é—á–∏ –∏–∑ generate_vapid_keys.py")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–ª—é—á –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏")

if __name__ == "__main__":
    test_vapid_key() 